trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:

- task: TerraformInstaller@1
  displayName: Terraform Install
  inputs:
    terraformVersion: 'latest'

- task: AzureCLI@2
  inputs:
    azureSubscription: 'Online(afe07a9d-e6de-4b4c-91eb-3ae7265a9245)'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      set -euo pipefail
      echo "##vso[task.setvariable variable=AZURE_CLIENT_ID;issecret=true]${servicePrincipalId}"
      echo "##vso[task.setvariable variable=AZURE_CLIENT_SECRET;issecret=true]${servicePrincipalKey}"
      echo "##vso[task.setvariable variable=AZURE_SUBSCRIPTION_ID;issecret=true]$(az account show --query 'id' -o tsv)"
      echo "##vso[task.setvariable variable=AZURE_TENANT_ID;issecret=true]${tenantId}"

- task: Bash@3
  displayName: 'Pin Terraform'
  inputs:
    targetType: 'inline'
    script: |
      set -euo pipefail
      
      curl -SL "https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip" --output terraform.zip
      echo "${TERRAFORM_DOWNLOAD_SHA} terraform.zip" | sha256sum -c -
      unzip "terraform.zip"
      sudo mv terraform /usr/local/bin
      terraform --version
      rm terraform.zip
- task: Bash@3
  displayName: Terraform Init
  env:
    ARM_CLIENT_ID: $(ARM_CLIENT_ID)
    ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
    ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
    ARM_TENANT_ID: $(ARM_TENANT_ID)
  inputs:
    targetType: 'inline'
    script: |
      set -euo pipefail

      echo "Initialise"
      terraform init \
        -input=false

      echo "Sanity Check"
      terraform validate
    
      echo "Show Terraform Version and Providers"
      terraform -v
      terraform providers
    workingDirectory: './Terraform/03-modules/'

